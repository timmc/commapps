# Config file version
version: 2

global:
  server_name: "{{ matrix__cfg.domain_identity }}"

  # Server signing key (identity, not TLS).
  private_key: "{{ matrix__cfg.data_dir }}/dendrite/matrix_key.pem"

  key_validity_period: 168h0m0s

  # Domains trusted to verify phone numbers and email addresses; using
  # default list.
  trusted_third_party_id_servers:
  - matrix.org
  - vector.im

  # Dendrite doesn't federate well yet -- in particular, if someone
  # joins a huge room, it can take down this host!
  disable_federation: true

  # Configuration for NATS JetStream
  jetstream:
    # Empty list for monolith mode (use internal server)
    addresses: []
    # Dir under which to maintain the "jetstream" dir (defaults to /tmp/nats)
    storage_path: "{{ matrix__cfg.data_dir }}/dendrite"
    # Standard topic prefix for Dendrite.
    topic_prefix: Dendrite

  metrics:
    enabled: false # don't enable without setting a password

  dns_cache:
    enabled: true
    cache_size: 256 # entries
    cache_lifetime: 149 # seconds, randomly chosen between 1 and 5 minutes


app_service_api:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"


client_api:
  registration_disabled: true
  # Registration override if registration is disabled. Used by matrix-registration UI.
  registration_shared_secret: "{{ matrix__cfg.registration_shared_secret }}"

  rate_limiting:
    enabled: true
    threshold: 5
    cooloff_ms: 500


federation_api:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"

  # X.509 certs to advertise to other servers, in PEM format.
  federation_certificates:
    - /srv/commdata/etc-letsencrypt/live/{{ matrix__cfg.domain_host }}/cert.pem

  # Perspective keyservers to use as a backup when direct key fetches fail. This may
  # be required to satisfy key requests for servers that are no longer online when
  # joining some rooms.
  key_perspectives:
  - server_name: matrix.org
    keys:
    - key_id: ed25519:auto
      public_key: Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw
    - key_id: ed25519:a_RXGa
      public_key: l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ

  # This option will control whether Dendrite will prefer to look up keys directly
  # or whether it should try perspective servers first, using direct fetches as a
  # last resort.
  prefer_direct_fetch: false


key_server:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"


media_api:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"

  # Storage path for uploaded media. May be relative or absolute.
  base_path: "{{ matrix__cfg.data_dir }}/dendrite/media_store"

  # Max allowed media upload (in bytes, 0 = unlimited).
  # nginx config needs to allow uploads of at least this size.
  max_file_size_bytes: 10485760

  # Whether to dynamically generate thumbnails if needed.
  dynamic_thumbnails: false

  # The maximum number of simultaneous thumbnail generators to run.
  max_thumbnail_generators: 10

  # A list of thumbnail sizes to be generated for media content.
  thumbnail_sizes:
  - width: 32
    height: 32
    method: crop
  - width: 96
    height: 96
    method: crop
  - width: 640
    height: 480
    method: scale


# Configuration for experimental MSC's
mscs:
  # A list of enabled MSC's
  # Currently valid values are:
  # - msc2836    (Threading, see https://github.com/matrix-org/matrix-doc/pull/2836)
  # - msc2946    (Spaces Summary, see https://github.com/matrix-org/matrix-doc/pull/2946)
  mscs: []
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"


room_server:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"


sync_api:
  database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"

  # Set by nginx to client's apparent IP address
  real_ip_header: X-Real-IP


user_api:
  account_database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"
  device_database:
    connection_string: "postgres://{{ matrix__cfg.pg.user }}:{{ matrix__cfg.pg.password }}@localhost/{{ matrix__cfg.pg.db }}"


# Logging configuration (can also configure a `type: std` for stdout/err)
logging:
- type: file
  # The logging level, must be one of debug, info, warn, error, fatal, panic.
  level: info
  params:
    path: "{{ matrix__cfg.data_dir }}/dendrite/logs"
