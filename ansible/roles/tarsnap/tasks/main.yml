---
# TODO: Add check that commdata partition is mounted, then rotate all secrets

# Fetch and compute fingerprint of current authoritative key:
#
# curl -sS https://pkg.tarsnap.com/tarsnap-deb-packaging-key.asc \
#   | gpg --with-colons --import-options show-only --import --fingerprint \
#   | awk -F: '$1 == "fpr" {print $10;}'
#
# After running this, check the new expiry, e.g.:
#
# apt-key list | grep 6D1A -B 1
- name: Install Tarsnap deb packaging key
  apt_key:
    url: https://pkg.tarsnap.com/tarsnap-deb-packaging-key.asc
    state: present
    # Expires 2021-02-01
    # TODO Monitor for expiration?
    id: "6D1A57E4FA6982AAA2049EB6FC72A10BF6B692AA"

- name: Discover Debian codename
  shell: lsb_release --codename --short
  register: sh_debversion
  changed_when: False
  check_mode: no

- name: Use Tarsnap package repository
  copy:
    content: |
      # Ansible: remote-backup role
      deb http://pkg.tarsnap.com/deb/{{ sh_debversion.stdout }} ./
      deb-src http://pkg.tarsnap.com/deb-src ./
    dest: /etc/apt/sources.list.d/tarsnap.list
  register: tarsnap__repo

- name: Refresh after adding repo
  apt:
    update_cache: yes
  when: tarsnap__repo.changed

# Tarsnap packages are only pre-built for some architectures (not for
# ARM, for instance.) If it's in the package cache we can install it,
# but otherwise we'll have to use apt-src to build it from source.

- name: "Check if tarsnap is installable from binary"
  shell: apt-cache show tarsnap
  register: tarsnap__apt_cache
  failed_when: False
  changed_when: False
  check_mode: no

- name: Install tarsnap
  when: tarsnap__apt_cache.rc == 0
  apt: name=tarsnap

# TODO: Check if the installed version is the latest available, and
# upgrading if not. (Would apply to apt-src compiled packages, which
# don't get upgrades the normal way.)

- name: "Compile and install tarsnap"
  when: tarsnap__apt_cache.rc != 0
  include: source-install.yml

# ----

- name: Directory for tarsnap secrets
  file:
    state: directory
    path: /srv/commdata/backups/secrets
    owner: root
    group: root
    mode: 0600

- name: Tarsnap key file
  copy:
    content: "{{ commdata_tarsnap_rw_key }}"
    dest: /srv/commdata/backups/secrets/tarsnap-rw.key
    owner: root
    group: root
    mode: 0600
  no_log: true

- name: A place for tarsnap scripts
  file:
    state: directory
    path: /opt/commapps/backups
    owner: root
    group: root
    mode: 0755

- name: Install backup script
  copy:
    src: "{{ role_path }}/files/run-backup.sh"
    dest: /opt/commapps/backups/run-backup.sh
    owner: root
    group: root
    mode: 0755

- name: Install archive listing script
  copy:
    src: "{{ role_path }}/files/list-archives.sh"
    dest: /opt/commapps/backups/list-archives.sh
    owner: root
    group: root
    mode: 0755

- name: Install archive restore script
  copy:
    src: "{{ role_path }}/files/restore-archive.sh"
    dest: /opt/commapps/backups/restore-archive.sh
    owner: root
    group: root
    mode: 0755

- name: Install cron job
  copy:
    src: "{{ role_path }}/files/cron"
    dest: /etc/cron.d/sandstorm-backup # TODO move
    owner: root
    group: root
    mode: 0644
