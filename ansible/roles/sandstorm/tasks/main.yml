---
# Double-check. See redundant task in commdata for more info.
# TODO: Rotate secrets now that this check is in place
- name: "Confirm that commdata is mounted"
  shell: mountpoint /srv/commdata
  changed_when: False

# Mechanism for vars/vault separation for role vars
- include_vars: "{{ role_path }}/vars/vault.yml"

# ----

# TODO Tasks for ensuring nginx doesn't start until commdata partition unlocked


#== ACME wildcard cert renewal ==#

- name: Install certbot
  apt: name=certbot

- name: Certbot secrets directory
  file:
    path: "/srv/commdata/secrets/certbot"
    state: directory
    owner: root
    group: root
    mode: 0600

- name: Certbot config directory
  file:
    path: "/srv/commdata/etc-letsencrypt" # Replaces /etc/letsencrypt
    state: directory
    owner: root
    group: root
    mode: 0755

- name: "Certbot configuration"
  copy:
    src: "{{ role_path }}/files/certbot/certbot.ini"
    dest: "/srv/commdata/etc-letsencrypt/certbot.ini"

- name: NFSN API key
  copy:
    content: "{{ sandstorm__nfsn_api_key }}"
    dest: "/srv/commdata/secrets/certbot/nfsn-api-key"
    owner: root
    group: root
    mode: 0600
  no_log: true

- name: Certbot management files
  file:
    state: directory
    path: /opt/commapps/certbot

- name: Certbot cert scipts
  synchronize:
    src: "{{ role_path }}/files/certbot/scripts/"
    dest: /opt/commapps/certbot/scripts/
  register: certbot__scripts

- name: Initial certbot run so nginx can start
  command: /opt/commapps/certbot/scripts/renew-certs.sh
  when: certbot__scripts.changed

- name: Schedule daily renewal check
  copy:
    src: "{{ role_path }}/files/certbot/certbot.cron"
    dest: /etc/cron.d/commapps-certbot


#== Sandstorm nginx ==#

- name: Sandstorm nginx configuration
  template:
    src: nginx-sites/sandstorm.conf.j2
    dest: /etc/nginx/sites-available/sandstorm.conf
  notify: nginx reload config

- name: Enable nginx configuration
  file:
    src: /etc/nginx/sites-available/sandstorm.conf
    dest: /etc/nginx/sites-enabled/sandstorm.conf
    state: link
  notify: nginx reload config


#== Sandstorm itself ==#

- name: "A place for sandstorm scripts"
  file:
    state: directory
    path: /opt/commapps/sandstorm
    owner: root
    group: root
    mode: 0755

- name: "Installer script"
  copy:
    src: "{{ role_path }}/files/sandstorm/install.sh"
    dest: /opt/commapps/sandstorm/install.sh
    mode: 0755

- name: "Install Sandstorm"
  shell: /opt/commapps/sandstorm/install.sh /srv/commdata/sandstorm
  args:
    creates: /srv/commdata/sandstorm

- name: "Sandstorm config file"
  template:
    src: "{{ role_path }}/templates/sandstorm/sandstorm.conf.j2"
    dest: "/srv/commdata/sandstorm/sandstorm.conf"
  notify: restart sandstorm

- name: "Ensure sandstorm is running"
  service:
    name: sandstorm
    state: started


#== Individual sites hosted in grains ==#

- name: "Sites hosted in grains"
  include_tasks: grain_site.yml
  loop:
    - purpose: "Spelunk's WebDAV integration test server"
      domain: spelunk-webdav-testing.spidersge.org
