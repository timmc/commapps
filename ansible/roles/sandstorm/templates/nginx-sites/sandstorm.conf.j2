# HTTP -> HTTPS redirect
server {
  listen 80;
  server_name {{ sandstorm_base_domain }} *.{{ sandstorm_base_domain }};
  return 301 https://$host$request_uri$is_args$args;
}

# Configuration for Sandstorm shell and apps, over HTTPS.
server {
  listen 443 ssl;
  server_name {{ sandstorm_base_domain }} *.{{ sandstorm_base_domain }};

  ssl_certificate {{ commdata_dir }}/etc-letsencrypt/live/{{ sandstorm_base_domain }}/fullchain.pem;
  ssl_certificate_key {{ commdata_dir }}/etc-letsencrypt/live/{{ sandstorm_base_domain }}/privkey.pem;

  # HSTS with a 365.25 days = 31557600 seconds expiration
  add_header Strict-Transport-Security max-age=31557600;

  location / {
    proxy_pass http://127.0.0.1:6080;

    # Forward the Host header, which is used to route requests for
    # static content published from Sandstorm apps.
    proxy_set_header Host $http_host;

    # Forward WebSocket.
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Allow large spk uploads from the /install form and allow grains to receive large uploads.
  client_max_body_size 1024m;
}

# Redirect old domain to current one
server {
  listen 443 ssl;
  server_name {{ sandstorm_old_domain }} *.{{ sandstorm_old_domain }};

  if ( $host ~ ^(?<subdomain>.+)\.\Q{{ sandstorm_old_domain }}\E$ ) {
    return 301 https://$subdomain.{{ sandstorm_base_domain }}$request_uri;
  }
  if ( $host = "{{ sandstorm_old_domain }}" ) {
    return 301 https://{{ sandstorm_base_domain }}$request_uri;
  }

  ssl_certificate {{ commdata_dir }}/etc-letsencrypt/live/{{ sandstorm_old_domain }}/fullchain.pem;
  ssl_certificate_key {{ commdata_dir }}/etc-letsencrypt/live/{{ sandstorm_old_domain }}/privkey.pem;

  # HSTS with a 365.25 days = 31557600 seconds expiration
  add_header Strict-Transport-Security max-age=31557600;
}

# HTTP -> HTTPS redirect for old domain too
server {
  listen 80;
  server_name {{ sandstorm_old_domain }} *.{{ sandstorm_old_domain }};
  return 301 https://$host$request_uri$is_args$args;
}
