---

# First time setup:
#
# - Format a thumb drive with a GUID partition table (GPT)
# - Create one partition: ext4, label "not-an-hsm"
# - Run `sudo blkid /dev/sdb1` to find PARTUUID
# - Create //host_vars/$HOST.yml with contents:
#     ---
#     commdata__key_partuuid: $PARTUUID
# - TODO instructions on partitioning main drive
# - Find partition UUID for logical partition used for LUKS, and add it
#   to the host var file:
#     commdata__luks_partuuid: $PARTUUID
# - Set host variables `commdata__zfs` and `commdata__lvm` (at most one as True)
#   depending on which one will be used. ZFS playbook is not supported on some
#   architectures, such as ARM (Raspberry Pi).

- name: "Fail if incompatible FS settings"
  fail:
    msg: "At most one of ZFS and LVM can be selected"
  when: commdata__zfs and commdata__lvm

- include: luks.yml
- include: zfs.yml
  when: commdata__zfs == True
- include: lvm.yml
  when: commdata__lvm == True

# Make sure that no matter how the partition was set up, it is
# properly mounted now. Other roles that rely on the commdata role are
# going to be writing secrets here and need to be sure that it's the
# encrypted partition, not the bare mountpoint.
#
# Other roles may wish to include this directive at the top of their
# tasks as well, besides including commdata as a dependency role in
# their meta/main.yml.
#
# Lack of this directive has caused secrets to be written to disk
# unencrypted before, thanks to a mis-written systemd service file.
- name: "Confirm that commdata is mounted"
  shell: mountpoint /srv/commdata
  changed_when: False

- name: Directory for caches
  file:
    state: directory
    path: /srv/commdata/cache
