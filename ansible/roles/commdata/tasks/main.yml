---

# First time setup:
#
# - Format a thumb drive with a GUID partition table (GPT)
# - Create one partition: ext4, label "not-an-hsm"
# - Run `sudo blkid /dev/sdb1` to find PARTUUID
# - Create //host_vars/$HOST.yml with contents:
#     ---
#     commdata__key_partuuid: $PARTUUID
# - TODO instructions on partitioning main drive
# - Find partition UUID for logical partition used for LUKS, and add it
#   to the host var file:
#     commdata__luks_partuuid: $PARTUUID


##== LUKS encrypted partition ==##

- name: Mountpoint for not-an-hsm
  file:
    state: directory
    path: /mnt/not-an-hsm

- name: Automount for not-an-hsm
  mount:
    state: mounted
    src: "PARTUUID={{ commdata__key_partuuid }}"
    name: /mnt/not-an-hsm
    fstype: ext4
    opts: defaults
    dump: 0
    passno: 2

- name: Directory for LUKS encryption key
  file:
    state: directory
    path: /mnt/not-an-hsm/commdata/enckey
    owner: root
    group: root
    mode: 0700

- name: LUKS encryption key
  shell: "tr -dc '[:graph:]' < /dev/urandom | head -c 32 > /mnt/not-an-hsm/commdata/enckey/pass.txt"
  args:
    creates: /mnt/not-an-hsm/commdata/enckey/pass.txt

- name: Permissions for LUKS encryption key
  file:
    state: file
    path: /mnt/not-an-hsm/commdata/enckey/pass.txt
    owner: root
    group: root
    mode: 0700

- name: Install cryptsetup
  apt: name=cryptsetup

- name: "Does LUKS device exist?"
  shell: cryptsetup isLuks /dev/disk/by-partuuid/{{ commdata__luks_partuuid|quote }}
  failed_when: False
  changed_when: False
  register: commdata__isLuks
  check_mode: no # Run in normal mode, since it registers a variable

# Since the host may not have had enough time to gather entropy, we
# produce some random numbers on the controller and mix them into the
# host's entropy pool. This doesn't boost the host's estimation of its
# own entropy, naturally, so /dev/random would still possibly
# block. However, /dev/urandom should be safe to use after this point.

- name: Collect entropy on controller
  when: commdata__isLuks.rc == 1
  connection: local
  shell: "tr -dc '[:graph:]' < /dev/urandom | head -c 512"
  changed_when: False
  register: commdata__entropy
  check_mode: no # Run in normal mode, since it registers a variable

- name: Boost entropy before using urandom for key material
  when: commdata__isLuks.rc == 1
  shell: echo {{ commdata__entropy.stdout|quote }} > /dev/random

# Using 512 instead of default 256 for both hash and key since XTS
# apparently halves the key strength, and the recommendation for
# quantum-safe symmetric crypto is to double the strength. So, to get
# 128-bit classical security, use 512 bits here (4x).

- name: Format LUKS device
  when: commdata__isLuks.rc == 1
  shell: cryptsetup --batch-mode --hash=sha512 --cipher=aes-xts-plain64 --key-size=512 --use-urandom --key-file /mnt/not-an-hsm/commdata/enckey/pass.txt luksFormat /dev/disk/by-partuuid/{{ commdata__luks_partuuid|quote }}

# TODO: Separate decrypt/mount scripts and services

- name: Mountpoint for encrypted partition
  file:
    state: directory
    path: /srv/commdata
    owner: root
    group: root
    mode: 0755

- name: Location for encrypted partition scripts
  file:
    state: directory
    path: /opt/commapps/encfs
    owner: root
    group: root
    mode: 0755

- name: Script for unlocking encrypted partition
  copy:
    src: "{{ role_path }}/files/open.sh"
    dest: /opt/commapps/encfs/open.sh
    owner: root
    group: root
    mode: 0755

- name: Script for locking encrypted partition
  copy:
    src: "{{ role_path }}/files/close.sh"
    dest: /opt/commapps/encfs/close.sh
    owner: root
    group: root
    mode: 0755

# If this is ever converted to a symlink for some reason, note that
# you'll need systemd v228 (I think) or higher in order to enable a
# symlinked unit file: https://github.com/systemd/systemd/issues/1836

- name: systemd service for encrypted partition
  copy:
    src: "{{ role_path }}/files/commdata.service"
    dest: /etc/systemd/system/commdata.service
    owner: root
    group: root
    mode: 0644
  #register: task_install_encfs_service

# Conditional reload doesn't seem to be sufficient; always reload it
# for now, since it's idempotent.

- name: Reload systemd config whether or not we added or changed a service
  command: systemctl daemon-reload
#  when: task_install_encfs_service | changed

- name: Enable encrypted partition service
  service:
    name: commdata
    enabled: yes
    state: started
